// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisionStore.Data;

#nullable disable

namespace VisionStore.Migrations
{
    [DbContext(typeof(VisionStoreDbContext))]
    [Migration("20230730090924_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VisionStore.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CartTimestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SelectedUnits")
                        .HasColumnType("int");

                    b.Property<int>("UserMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("productsProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserMasterId");

                    b.HasIndex("productsProductId");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("VisionStore.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerCity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerContactNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerCountry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerEmailAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CustomerPin")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("VisionStore.Models.DeliveryMethods", b =>
                {
                    b.Property<int>("DeliveryMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DeliveryMethodDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DeliveryMethodId");

                    b.ToTable("deliveryMethods");
                });

            modelBuilder.Entity("VisionStore.Models.DiscountTable", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DiscountCouponCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DiscountCouponCodeStart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DiscountCouponCodeValidTill")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DiscountCouponDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DiscountCouponPercentage")
                        .HasColumnType("int");

                    b.HasKey("DiscountId");

                    b.ToTable("discounts");
                });

            modelBuilder.Entity("VisionStore.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("VisionStore.Models.Manufacturer", b =>
                {
                    b.Property<int>("ManuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ManuCity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ManuCountry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ManuGrade")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("ManufacturerDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ManuId");

                    b.ToTable("manufacturers");
                });

            modelBuilder.Entity("VisionStore.Models.PreferredPaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethodDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("preferredPaymentMethods");
                });

            modelBuilder.Entity("VisionStore.Models.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ManuId")
                        .HasColumnType("int");

                    b.Property<int?>("ManufacturerManuId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductFeature")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProductInventoryLevel")
                        .HasColumnType("int");

                    b.Property<int>("ProductInventoryThreshold")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductPriceCurrency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductSize")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductSubCategory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProductUnit")
                        .HasColumnType("int");

                    b.Property<long>("ProductUnitPrice")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId");

                    b.HasIndex("ManufacturerManuId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("VisionStore.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int?>("DiscountTableDiscountId")
                        .HasColumnType("int");

                    b.Property<int>("FinalValue")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethodUses")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("TotalValue")
                        .HasColumnType("float");

                    b.HasKey("PurchaseId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DiscountTableDiscountId");

                    b.ToTable("purchases");
                });

            modelBuilder.Entity("VisionStore.Models.PurchaseProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DeliveryInstruction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductsProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("PurchasedUnits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductsProductId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("purchaseProducts");
                });

            modelBuilder.Entity("VisionStore.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("VisionStore.Models.UserMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserContactNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserEmailId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserSecreteAnswer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserSecreteQuestion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("userMasters");
                });

            modelBuilder.Entity("VisionStore.Models.Cart", b =>
                {
                    b.HasOne("VisionStore.Models.UserMaster", "UserMaster")
                        .WithMany()
                        .HasForeignKey("UserMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisionStore.Models.Products", "products")
                        .WithMany()
                        .HasForeignKey("productsProductId");

                    b.Navigation("UserMaster");

                    b.Navigation("products");
                });

            modelBuilder.Entity("VisionStore.Models.Products", b =>
                {
                    b.HasOne("VisionStore.Models.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerManuId");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("VisionStore.Models.Purchase", b =>
                {
                    b.HasOne("VisionStore.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisionStore.Models.DiscountTable", "DiscountTable")
                        .WithMany()
                        .HasForeignKey("DiscountTableDiscountId");

                    b.Navigation("Customer");

                    b.Navigation("DiscountTable");
                });

            modelBuilder.Entity("VisionStore.Models.PurchaseProducts", b =>
                {
                    b.HasOne("VisionStore.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductsProductId");

                    b.HasOne("VisionStore.Models.Purchase", "Purchase")
                        .WithMany()
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("VisionStore.Models.UserMaster", b =>
                {
                    b.HasOne("VisionStore.Models.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
